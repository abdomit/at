function bpmreading = bpm_process(bpmorbit,rel,tel,trand)
%BPM_PROCESS Compute BPM readings from the closed orbit
%
%BPM_READING=BPM_PROCESS(BPM_ORBIT,REL,TEL,TRAND)
%
%This function returns BPM readings from particle coordinates and transformation
%matrices generated by BPM_MATRICES
%
%INPUTS:
%BPM_ORBIT:     2xN array of coordinates at BPM locations
%REL,TEL,TRAND:	transformation matrices returned by BPM_PROCESS
%
%OUTPUTS:
%BPM_READING:   2xN array of BPM readings
%
%The BPM reading vector BPM_READING is obtained by:
%
%         BPM_READING = REL*BPMORBIT + TEL + TRAND.*RANDN(2,1);
%
%EXAMPLE (N.B. the following is done by findorbit4Err or findorbit6Err):
%
% orbit = findorbit6(RING, indbpm);
% [rel,tel,trand] = bpm_matrices(RING(indbpm));
% bpmreading = bpm_process(orbit([1,3],:),rel,tel,trand);
% orbit_with_errors = orbit; 
% orbit_with_errors(1,:)=bpmreading(1,:);
% orbit_with_errors(3,:)=bpmreading(2,:);
%
% 
%See also: BPM_MATRICES findorbit4Err findorbit6Err

bp=cellfun(@process,num2cell(bpmorbit,1),rel,tel,trand,'UniformOutput',false);
bpmreading=cat(2,bp{:});

    function x=process(x0,rel,tel,trand)
        x=rel*x0 + tel + trand.*randn(2,1);
    end
end
